@using GoodsAccountingSystem.Helpers;
@model IEnumerable<GoodsAccountingSystem.ViewModels.GoodViewModel>

@{
    ViewData["Title"] = "GoodsList";

    object ErrorModal = 
        TempData["EditErrorModal"] ??
        TempData["CreateErrorModal"];

    @section Scripts {
        @if (ErrorModal != null)
        {
            <script>
                var content = `@Html.Raw((string)ErrorModal)`;
                $('#@Constants.MODAL_HOLDER').html(content);
                console.log($('#@Constants.MODAL_ID'));
                $('#@Constants.MODAL_ID').modal('show');
            </script>
        }
    }


}

<h2>Список товаров</h2>
<hr />

<div class="d-flex flex-wrap justify-content-between">
    <div class="">@DateTime.Now.ToLongTimeString()</div>
    @*  *@
</div>

<table class="table table-bordered table-hover table-edit">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Attachment)
            </th>
            <th>
                <button type="button" class="btn btn-success" onclick="showModal('@Constants.GOODS','@Constants.CREATE')"><i class="fas fa-plus"></i></button>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr onclick="showModal('@Constants.GOODS','@Constants.EDIT','@item.Id')">
                <td>
                    @Html.DisplayFor(modelItem => item.CreationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @if (item.InStock)
                    {
                        @: Да
                    }
                    else
                    {
                        @: Нет
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Attachment)
                </td>
                <td onclick="event.stopPropagation()">
                    <button type="button" class="btn btn-danger" onclick="showModal('@Constants.GOODS','@Constants.DELETE','@item.Id')"><i class="fas fa-trash-alt"></i></button>
                </td>
            </tr>
        }
    </tbody>
    @{
        //var grid = new WebGrid(source: ViewBag.list, canPage: true, rowsPerPage: 1);
        //grid.Pager(WebGridPagerModes.NextPrevious);
    }
</table>